name: Static Website CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate HTML files
      run: |
        echo "üîç Validating HTML structure..."
        HTML_FILES=$(find . -name "*.html" -not -path "./.git/*")
        for file in $HTML_FILES; do
          echo "Checking $file"
          if ! grep -q "<!DOCTYPE html>" "$file"; then
            echo "‚ùå ERROR: $file missing DOCTYPE"
            exit 1
          fi
          if ! grep -q "<title>" "$file"; then
            echo "‚ö†Ô∏è WARNING: $file missing title"
          fi
          echo "‚úÖ $file passed basic validation"
        done

    - name: Check for broken internal links
      run: |
        echo "üîó Checking internal links..."
        for file in *.html; do
          if [ -f "$file" ]; then
            echo "Checking links in $file"
            # Simple link check - looks for href attributes
            grep -o 'href="[^"]*"' "$file" | while read -r link; do
              link=${link#href=\"}
              link=${link%\"}
              if [[ $link == /* || $link == ./* ]] && [[ ! $link =~ http ]]; then
                if [ ! -f "$link" ] && [ ! -d "$link" ]; then
                  echo "‚ùå Broken link in $file: $link"
                  exit 1
                fi
              fi
            done
          fi
        done

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

    - name: Display deployment URL
      run: |
        echo "üåê Your website is live at: ${{ steps.deployment.outputs.page_url }}"